!function(){function formatOutputValue(value){if("number"!=typeof value)throw new Error("Value must be a number.");return value>=1e6?(value/1e6).toFixed(2)+" MΩ":value>=1e3?(value/1e3).toFixed(2)+" kΩ":value+" Ω"}const COLORS=[{0:"BLACK",T:null},{1:"BROWN",T:1},{2:"RED",T:2},{3:"ORANGE",T:null},{4:"YELLOW",T:null},{5:"GREEN",T:.5},{6:"BLUE",T:.25},{7:"VIOLET",T:.1},{8:"GREY",T:.05},{9:"WHITE",T:null},{G:"GOLD",T:5},{S:"SILVER",T:10}],element=(tagName,...attributes)=>{const newElement=document.createElement(tagName);for(let i=0;i<attributes.length;i+=2)newElement.setAttribute(attributes[i],attributes[i+1]);return newElement},reg=new RegExp("^0+(?=d)|D+","g");function createColorBand(obj,index){const select=element("div","id","id"+index);return obj.forEach((e,i)=>{const color=Object.values(e)[0],tolerance=Object.values(e)[1],option=element("div","data-tolerance",tolerance,"data-color",color,"data-resistor",i,"style","color:"+color+";background-color:"+color,"title","(band"+(index+1)+") "+color);option.textContent=color,select.appendChild(option)}),select.onclick=e=>colorDetect(e,index),select}const resistorsMain=document.getElementById("resistor"),selections=document.getElementById("resistor-output"),switcher=document.getElementById("switch"),outputTolerance=element("div","id","resistor-tolerance","class","outputs"),outputValue=element("div","id","resistor-value","class","outputs"),outputValueSpan=element("span"),outputToleranceSpan=element("span"),theResistor=[],switcherChecker=()=>!0===switcher.checked;function resistorCreator(){theResistor.length=0;const elements=element("div","id","resistor-colors");let bandsOfResistor=switcherChecker()?4:5;resistorsMain.innerHTML="";for(let i=0;i<bandsOfResistor;i++){const bands=createColorBand(COLORS,i);bands.className="selected",elements.appendChild(bands)}resistorsMain.appendChild(elements)}function colorDetect(e,i){const eventTarget=e.target;if(eventTarget.dataset.color){const target=e.currentTarget,divs=Array.from(target.getElementsByTagName("div"));if(target.classList.toggle("selected"),target.classList.contains("selected"))divs.forEach(e=>e.className="");else{divs.forEach(e=>e.className="hidden"),eventTarget.className="selected",theResistor[i]=parseInt(eventTarget.dataset.resistor);const resistorReversed=[...theResistor].reverse();if(theResistor.length>=4){const fourTrue=switcherChecker(),fourOrFive=fourTrue?2:3;let powerValue=Math.pow(10,theResistor[fourOrFive]),powerValueRev=Math.pow(10,resistorReversed[fourOrFive]);10===theResistor[fourOrFive]&&(powerValue=1),11===theResistor[fourOrFive]&&(powerValue=2);let stringToNum=parseInt(theResistor.slice(0,fourOrFive).join("").replace(reg)),stringToNum1=parseInt(resistorReversed.slice(0,fourOrFive).join("").replace(reg));outputValueSpan.innerHTML="<span>(if reverse:"+formatOutputValue(stringToNum1*powerValueRev)+")</span>"+formatOutputValue(stringToNum*powerValue),outputToleranceSpan.innerHTML="<span>(if reverse:"+(COLORS[theResistor[0]].T||20)+")</span>"+(COLORS[theResistor[theResistor.length-1]].T||20)}}}}switcher.onchange=()=>outputValueSpan.innerHTML=outputToleranceSpan.innerHTML="",outputValue.textContent="(ohms)value:",outputTolerance.textContent="(%)tolerance:",outputValue.appendChild(outputValueSpan),outputTolerance.appendChild(outputToleranceSpan),selections.appendChild(outputValue),selections.appendChild(outputTolerance),document.addEventListener("DOMContentLoaded",resistorCreator),switcher.addEventListener("change",resistorCreator)}();